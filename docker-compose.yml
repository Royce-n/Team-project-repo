version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: user_management_db
    environment:
      POSTGRES_DB: user_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: SD2025COOLGROUP
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: user_management_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://postgres:SD2025COOLGROUP@postgres:5432/user_management
      JWT_SECRET: your_jwt_secret_key_here
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: user_management_frontend
    environment:
      REACT_APP_API_URL: http://143.110.148.157:5000
      REACT_APP_AZURE_CLIENT_ID: ${AZURE_CLIENT_ID}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
